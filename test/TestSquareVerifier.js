// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require("Verifier");
// Test verification with correct proof
contract("TestVerifier", (accounts) => {
  const owner = accounts[0];
  // - use the contents from proof.json generated from zokrates steps
  const proof = require("../zokrates/code/square/proof.json");

  beforeEach(async function () {
    this.contract = await Verifier.new({ from: owner });
  });

  // Test verification with incorrect proof
  it("Test verification with incorrect proof 1", async function () {
    const {
      proof: { a, b, c },
      inputs: input,
    } = proof;
    let result = await this.contract.verifyTx.call(a, b, c, input);
    assert.equal(result, true, "Need to return true");
  });
  it("Test verification with incorrect proof 2", async function () {
    const {
      proof: { a, b, c },
    } = proof;
    let result = await this.contract.verifyTx.call(a, b, c, [0, 0]);
    assert.equal(result, false, "Need to be false");
  });
});
